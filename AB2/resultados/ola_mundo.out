   1  int main(){
          Decls = Decl Decls 
          Decl = Type DeclAux 
          Type = 'int' 
              [0001, 0001] (0008,              Integer) {int}
          DeclAux = 'Id' DeclBux 
              [0001, 0005] (0040,                   Id) {main}
          DeclBux = '(' ParamDef ')' '{' StmList '}' 
              [0001, 0009] (0014,             Parenth1) {(}
          ParamDef = épsilon 
              [0001, 0010] (0015,             Parenth2) {)}
              [0001, 0011] (0016,              Braces1) {{}
   2      string a = "Olá mundo!";
          StmList = Stm StmList 
          Stm = VarDecl 
          VarDecl = Type 'Id' Array Init VarList ';' 
          Type = 'string' 
              [0002, 0005] (0012,               String) {string}
              [0002, 0012] (0040,                   Id) {a}
          Array = épsilon 
          Init = '=' InitAux 
              [0002, 0014] (0036,               Assign) {=}
          InitAux = OpConc 
          OpConc = OpOr OpCoAux 
          OpOr = OpAndXor OpOrAux 
          OpAndXor = OpEquate OpAXAux 
          OpEquate = OpCompare OpEAux 
          OpCompare = OpAdd OpCAux 
          OpAdd = OpMult OpAddAux 
          OpMult = OpUnary OpMAux 
          OpUnary = Value 
          Value = 'CteString' 
              [0002, 0016] (0044,            CteString) {"Olá mundo!"}
          OpMAux = épsilon 
          OpAddAux = épsilon 
          OpCAux = épsilon 
          OpEAux = épsilon 
          OpAXAux = épsilon 
          OpOrAux = épsilon 
          OpCoAux = épsilon 
          VarList = épsilon 
              [0002, 0029] (0038,           Terminator) {;}
   3      output("%s", a);
          StmList = Stm StmList 
          Stm = NormalStm 
          NormalStm = 'output' '(' 'CteString'  ')' ';' 
              [0003, 0005] (0007,               Output) {output}
              [0003, 0011] (0014,             Parenth1) {(}
              [0003, 0012] (0044,            CteString) {"%s"}
           = ',' ParamList 
              [0003, 0016] (0037,                Comma) {,}
          ParamList = 'Id' ParamLAux 
              [0003, 0018] (0040,                   Id) {a}
          ParamLAux = épsilon 
              [0003, 0019] (0015,             Parenth2) {)}
              [0003, 0020] (0038,           Terminator) {;}
   4      return 0;
          StmList = Stm StmList 
          Stm = NormalStm 
          NormalStm = 'return' OpConc ';' 
              [0004, 0005] (0005,               Return) {return}
          OpConc = OpOr OpCoAux 
          OpOr = OpAndXor OpOrAux 
          OpAndXor = OpEquate OpAXAux 
          OpEquate = OpCompare OpEAux 
          OpCompare = OpAdd OpCAux 
          OpAdd = OpMult OpAddAux 
          OpMult = OpUnary OpMAux 
          OpUnary = Value 
          Value = 'CteInt' 
              [0004, 0012] (0041,               CteInt) {0}
          OpMAux = épsilon 
          OpAddAux = épsilon 
          OpCAux = épsilon 
          OpEAux = épsilon 
          OpAXAux = épsilon 
          OpOrAux = épsilon 
          OpCoAux = épsilon 
              [0004, 0013] (0038,           Terminator) {;}
   5  }
          StmList = épsilon 
              [0005, 0001] (0017,              Braces2) {}}
          Decls = épsilon 
